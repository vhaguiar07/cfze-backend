generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid()) @db.Uuid
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Employee {
  id                     String    @id @default(uuid()) @db.Uuid
  fullName               String
  address                String
  city                   String
  postalCode             String
  phoneNumber            String
  nationality            String
  cpf                    String    @unique
  rg                     String    @unique
  rgIssueDate            DateTime?
  rgIssuingAgency        String?
  rgState                String?
  ctps                   String    @unique
  pisPasep               String    @unique
  educationLevel         String
  voterRegistration      String?   @unique
  reservist              String?   @unique
  fatherName             String?
  motherName             String?
  maritalStatus          String?
  birthDate              DateTime
  birthPlace             String?
  admissionDate          DateTime
  salary                 Decimal
  jobTitle               String
  monthlyWorkloadHours   Int
  weeklyWorkloadHours    Int
  dayOff                 String?
  transportDiscount      Boolean

  // Work Schedule - Weekdays
  firstEntryWeekday      String?
  firstExitWeekday       String?
  secondEntryWeekday     String?
  secondExitWeekday      String?

  // Work Schedule - Weekends
  firstEntryWeekend      String?
  firstExitWeekend       String?
  secondEntryWeekend     String?
  secondExitWeekend      String?

  // PPE (Personal Protective Equipment)
  receivedPPE            Boolean
  pantsSize              String?
  shirtSize              String?
  bootSize               String?
  jacketSize             String?
  balaclavaSize          String?
  gogglesSize            String?
  glovesSize             String?
  ppeReceiptDate         DateTime?

  // Vacation and Termination
  tookVacation           Boolean
  vacationDate           DateTime?
  terminationType        String?  // Options: 'Fired', 'Resigned', 'Just Cause'
  terminationDate        DateTime?
  receivedIndemnity      Boolean?
  indemnityDate          DateTime?
  indemnityValue         Decimal?

  // Interview Information
  admissionInterview     Boolean?
  exitInterview          Boolean?

  // Medical Examinations
  admissionAsoDates      DateTime[] @default([])
  periodicAsoDates       DateTime[] @default([])
  dismissalAsoDates      DateTime[] @default([])

  // Leave and Accident Records
  paternityLeaveDates    DateTime[] @default([])
  maternityLeaveDates    DateTime[] @default([])
  electoralLeaveDates    DateTime[] @default([])
  sufferedAccident       Boolean?
  leaveOfAbsenceDates    DateTime[] @default([])

  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt
}
